<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.xuli.toe.dao.IUserDao">
    <resultMap id="UserMap" type="team.xuli.toe.domain.User" autoMapping="true">
        <id column="userId" property="userId"/>
        <collection property="authorities" ofType="org.springframework.security.core.authority.SimpleGrantedAuthority">
            <constructor>
                <arg column="role" javaType="string"/>
            </constructor>
        </collection>
    </resultMap>
    <!--通过用户登录名获取用User-->
    <select id="getByUsername" resultMap="UserMap">
        SELECT
        user.userId,
        user.username,
        user.password,
        user.accountNonExpired,
        user.accountNonLocked,
        user.credentialsNonExpired,
        user.enabled,
        role.roleName role
        FROM user
        LEFT JOIN r_user_role  ON user.userId = r_user_role.userId
        LEFT JOIN role ON r_user_role.roleId = role.roleId
        WHERE user.username=#{username};
    </select>

    <insert id="insert" parameterType="team.xuli.toe.domain.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO `user`
        (`username`,
        `password`,
        `credit`,
        `money`,
        `enabled`,
        `accountNonExpired`,
        `accountNonLocked`,
        `credentialsNonExpired`)
        VALUES
        (#{username},
        #{password},
        #{credit},
        #{money},
        #{enabled},
        #{accountNonExpired},
        #{accountNonLocked},
        #{credentialsNonExpired});
    </insert>

    <update id="update" parameterType="team.xuli.toe.domain.User">
        UPDATE `user`
        SET
        <if test="username != '' and username != null">`username` = #{username},</if>
        <if test="password != '' and password != null">`password` = #{password},</if>
        <if test="credit != -1">`credit` = #{credit},</if>
        <if test="money != -1">`money` = #{money},</if>
        `userId` = #{userId},
        `enabled` = #{enabled},
        `accountNonExpired` = #{accountNonExpired},
        `accountNonLocked` = #{accountNonLocked},
        `credentialsNonExpired` = #{credentialsNonExpired},
        WHERE `userId` = #{userId};
    </update>
</mapper>

